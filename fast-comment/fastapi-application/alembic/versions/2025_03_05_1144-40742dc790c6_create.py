"""create

Revision ID: 40742dc790c6
Revises:
Create Date: 2025-03-05 11:44:09.742274

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "40742dc790c6"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "panels",
        sa.Column("number_panels", sa.Integer(), nullable=False),
        sa.Column("login", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_panels")),
        sa.UniqueConstraint(
            "number_panels", name=op.f("uq_panels_number_panels")
        ),
    )
    op.create_table(
        "panelss",
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("number_panels", sa.Integer(), nullable=False),
        sa.Column("check", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["number_panels"],
            ["panels.number_panels"],
            name=op.f("fk_panelss_number_panels_panels"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_panelss")),
        sa.UniqueConstraint(
            "number_panels", name=op.f("uq_panelss_number_panels")
        ),
    )
    op.create_table(
        "users",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_user"], ["panelss.id"], name=op.f("fk_users_id_user_panelss")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("id_user", name=op.f("uq_users_id_user")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("panelss")
    op.drop_table("panels")
    # ### end Alembic commands ###
